"use strict";(self.webpackChunkvrc_school=self.webpackChunkvrc_school||[]).push([[6337],{2285:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=r(5893),a=r(1151);const i={title:"Expression Parameter Mismatching",sidebar_position:2,slug:"Parameter-Mismatching",last_edited:new Date("2024-03-31T08:54:00.000Z"),contributors:"[Jellejurre](https://jellejurre.dev/), [JustSleightly](https://vrc.sleightly.dev/)"},n="Expression Parameter Mismatching {#1381b80d68b4470f8e8ed104521cf4c0}",o={id:"Other/Parameter-Mismatching",title:"Expression Parameter Mismatching",description:"Contributors: Jellejurre, JustSleightly",source:"@site/docs/Other/Parameter-Mismatching.md",sourceDirName:"Other",slug:"/Other/Parameter-Mismatching",permalink:"/docs/Other/Parameter-Mismatching",draft:!1,unlisted:!1,editUrl:"https://github.com/VRLabs/VRCSchool/tree/main/docs/Other/Parameter-Mismatching.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Expression Parameter Mismatching",sidebar_position:2,slug:"Parameter-Mismatching",last_edited:"2024-03-31T08:54:00.000Z",contributors:"[Jellejurre](https://jellejurre.dev/), [JustSleightly](https://vrc.sleightly.dev/)"},sidebar:"sideBar",previous:{title:"Network Sync",permalink:"/docs/Other/Network-Sync"},next:{title:"Combining Layers Using Direct Blend Trees",permalink:"/docs/Other/DBT-Combining"}},l={},d=[{value:"Verified Parameter Mismatch Behaviour:",id:"5f563ebf52ea44ff8597e6b2d0a53948",level:2},{value:"Expression Parameter Bool:",id:"expression-parameter-bool",level:3},{value:"Expression Parameter Int:",id:"expression-parameter-int",level:3},{value:"Expression Parameter Float:",id:"expression-parameter-float",level:3},{value:"Why does mismatching work?",id:"ea79f2b19900472cb27828cb4b9d193c",level:2},{value:"Testing in Unity",id:"b201270cb4f54614a5a47dc1f991bbae",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components},{GreyItalicText:i,RightAlignedText:n}=t;return i||m("GreyItalicText",!0),n||m("RightAlignedText",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Contributors: ",(0,s.jsx)(t.a,{href:"https://jellejurre.dev/",children:"Jellejurre"}),", ",(0,s.jsx)(t.a,{href:"https://vrc.sleightly.dev/",children:"JustSleightly"})]}),"\n",(0,s.jsx)(t.h1,{id:"1381b80d68b4470f8e8ed104521cf4c0",children:"Expression Parameter Mismatching"}),"\n",(0,s.jsxs)(t.p,{children:["In typical VRChat Avatars 3.0 creation, VRChat expression parameters are expected to be set as the same parameter type (",(0,s.jsx)(t.code,{children:"Bool"}),", ",(0,s.jsx)(t.code,{children:"Int"}),", ",(0,s.jsx)(t.code,{children:"Float"}),") as their respective local animator parameter counterparts."]}),"\n",(0,s.jsx)(t.p,{children:"However, parameters between your Expression Parameters vs your local animator parameters can have mismatched parameter types and still function. This behaviour differs from type to type, and is documented below."}),"\n",(0,s.jsxs)("div",{class:"notion-row",children:[(0,s.jsx)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 1)) * 0.5)"},children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{alt:"A parameter labeled Toggle added to VRChat Expression Parameters as a Bool",src:r(1472).Z+"",width:"512",height:"316"}),(0,s.jsx)("br",{}),(0,s.jsx)(i,{children:"A parameter labeled Toggle added to VRChat Expression Parameters as a Bool"})]})}),(0,s.jsx)("div",{className:"notion-spacer"}),(0,s.jsx)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 1)) * 0.5)"},children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.img,{alt:"A parameter labeled Toggle added to local animator parameters as a Float",src:r(7490).Z+"",width:"504",height:"241"}),(0,s.jsx)("br",{}),(0,s.jsx)(i,{children:"A parameter labeled Toggle added to local animator parameters as a Float"})]})}),(0,s.jsx)("div",{className:"notion-spacer"})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"5f563ebf52ea44ff8597e6b2d0a53948",children:"Verified Parameter Mismatch Behaviour:"}),"\n",(0,s.jsxs)("div",{class:"notion-row",children:[(0,s.jsxs)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 2)) * 0.33333333333333337)"},children:[(0,s.jsx)(t.h3,{id:"expression-parameter-bool",children:"Expression Parameter Bool:"}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Animator Controller Parameter"}),(0,s.jsx)(t.th,{children:"Expression Bool = False"}),(0,s.jsx)(t.th,{children:"Expression Bool = True"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Bool \u2192 Bool"}),(0,s.jsx)(t.td,{children:"Bool = False"}),(0,s.jsx)(t.td,{children:"Bool = True"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Bool \u2192 Int"}),(0,s.jsx)(t.td,{children:"Int = 0"}),(0,s.jsx)(t.td,{children:"Int = 1"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Bool \u2192 Float"}),(0,s.jsx)(t.td,{children:"Float = 0.0"}),(0,s.jsx)(t.td,{children:"Float = 1.0"})]})]})]})]}),(0,s.jsx)("div",{className:"notion-spacer"}),(0,s.jsxs)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 2)) * 0.3333333333333333)"},children:[(0,s.jsx)(t.h3,{id:"expression-parameter-int",children:"Expression Parameter Int:"}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Animator Controller Parameter"}),(0,s.jsx)(t.th,{children:"Behaviour"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Int \u2192 Bool"}),(0,s.jsx)(t.td,{children:"Any Int value that isn\u2019t 0 sets bool to True"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Int \u2192 Int"}),(0,s.jsx)(t.td,{children:"Expected Behaviour"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Int \u2192 Float"}),(0,s.jsx)(t.td,{children:"Straight Conversion:  Ex: Int = 2 \u2192 Float = 2.0"})]})]})]})]}),(0,s.jsx)("div",{className:"notion-spacer"}),(0,s.jsxs)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 2)) * 0.3333333333333334)"},children:[(0,s.jsx)(t.h3,{id:"expression-parameter-float",children:"Expression Parameter Float:"}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Animator Controller Parameter"}),(0,s.jsx)(t.th,{children:"Behaviour"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Float \u2192 Bool"}),(0,s.jsx)(t.td,{children:"Any Float value that isn\u2019t 0 sets bool to True"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Float \u2192 Int"}),(0,s.jsx)(t.td,{children:"Rounded Conversion: \u22650.5 \u2192 1 : <0.5 \u2192 0"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Float \u2192 Float"}),(0,s.jsx)(t.td,{children:"Expected Behaviour"})]})]})]})]}),(0,s.jsx)("div",{className:"notion-spacer"})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"ea79f2b19900472cb27828cb4b9d193c",children:"Why does mismatching work?"}),"\n",(0,s.jsx)(t.p,{children:"Unity Animators use floats on the C# back-end regardless of parameter type, while VRChat uses SBytes instead of bools, ints, or floats."}),"\n",(0,s.jsx)(t.p,{children:"The Animator window and VRCSDK themselves makes the user experience simpler by allowing you to select the parameter types from the interface."}),"\n",(0,s.jsxs)(t.p,{children:["In this sense, the parameters are not being casted but ",(0,s.jsx)(t.strong,{children:"mismatched"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Mismatching parameters also works with the ",(0,s.jsx)(t.a,{href:"https://docs.vrchat.com/docs/animator-parameters#parameters",children:"VRChat native parameters"}),"."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"b201270cb4f54614a5a47dc1f991bbae",children:"Testing in Unity"}),"\n",(0,s.jsx)(t.p,{children:"At this time of writing:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/lyuma/Av3Emulator",children:(0,s.jsx)(t.strong,{children:"Av3Emulator"})})," has implemented the above parameter mismatching behaviour."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/BlackStartx/VRC-Gesture-Manager",children:(0,s.jsx)(t.strong,{children:"Gesture Manager"})})," has implemented the above parameter mismatching behaviour for all parameters but vrc builtin parameters, but is working on that for their 3.8.9 release."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(n,{children:"Last Updated: 31 March 2024 08:54:00"})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}function m(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},7490:(e,t,r)=>{r.d(t,{Z:()=>s});const s=r.p+"assets/images/1788072644-e3276d5407cde46c161cd79db11496f9.png"},1472:(e,t,r)=>{r.d(t,{Z:()=>s});const s=r.p+"assets/images/557974353-b78f9430aec411830be5bea8eeebb013.png"},1151:(e,t,r)=>{r.d(t,{Z:()=>o,a:()=>n});var s=r(7294);const a={},i=s.createContext(a);function n(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);