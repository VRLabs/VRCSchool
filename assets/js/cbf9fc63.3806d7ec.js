"use strict";(self.webpackChunkvrc_school=self.webpackChunkvrc_school||[]).push([[2595],{4024:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var t=n(5893),r=n(1151);const a={title:"Understanding Avatars 3.0",sidebar_position:3,slug:"Understanding-Avatars-3-0",last_edited:new Date("2024-03-31T08:54:00.000Z"),contributors:"[Jellejurre](https://jellejurre.dev/), [JustSleightly](https://vrc.sleightly.dev/)"},i="Avatars 3.0 Overview {#68b7d78456ed43e0864a8b397d9c5b9f}",l={id:"Avatars/Understanding-Avatars-3-0",title:"Understanding Avatars 3.0",description:"Contributors: Jellejurre, JustSleightly",source:"@site/docs/Avatars/Understanding-Avatars-3-0.md",sourceDirName:"Avatars",slug:"/Avatars/Understanding-Avatars-3-0",permalink:"/docs/Avatars/Understanding-Avatars-3-0",draft:!1,unlisted:!1,editUrl:"https://github.com/VRLabs/VRCSchool/tree/main/docs/Avatars/Understanding-Avatars-3-0.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Understanding Avatars 3.0",sidebar_position:3,slug:"Understanding-Avatars-3-0",last_edited:"2024-03-31T08:54:00.000Z",contributors:"[Jellejurre](https://jellejurre.dev/), [JustSleightly](https://vrc.sleightly.dev/)"},sidebar:"sideBar",previous:{title:"VRChat Avatar SDK Components",permalink:"/docs/Avatars/SDK-Components"},next:{title:"The Avatar Descriptor",permalink:"/docs/Avatars/Avatar-Descriptor"}},o={},d=[{value:"Glossary",id:"4939e2667ede4f728d4431de864bf926",level:2},{value:"Triggers",id:"39b2ffccb7d44aa6a52b28bca040b052",level:3},{value:"Variables",id:"aaf30605d88741db9a89bf9c93b6e93a",level:3},{value:"Controller",id:"4c738fe5b2514fbeafdcd055a6f061ef",level:3},{value:"Action",id:"de613552d76b4d1ebbb0079c6e961a9f",level:3},{value:"Example Logic - Toggles",id:"example-logic---toggles",level:2},{value:"Example Logic - Gestures",id:"example-logic---gestures",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{GreyItalicText:a,RightAlignedText:i}=s;return a||m("GreyItalicText",!0),i||m("RightAlignedText",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["Contributors: ",(0,t.jsx)(s.a,{href:"https://jellejurre.dev/",children:"Jellejurre"}),", ",(0,t.jsx)(s.a,{href:"https://vrc.sleightly.dev/",children:"JustSleightly"})]}),"\n",(0,t.jsx)(s.h1,{id:"68b7d78456ed43e0864a8b397d9c5b9f",children:"Avatars 3.0 Overview"}),"\n",(0,t.jsxs)("div",{class:"notion-row",children:[(0,t.jsxs)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 1)) * 0.5)"},children:[(0,t.jsx)(s.p,{children:"Having a general understanding of how 3.0 works will help with learning how to accomplish any animation on your avatar, and leave less holes/mistakes in the workflow. The visual diagram on the right covers VRChat\u2019s SDK functionality relatively cohesively."}),(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"The black lines/borders highlight the basic understanding that newer creators should focus on."}),"\n",(0,t.jsx)(s.li,{children:"The solid gray lines indicate additional functionality Avatars 3.0 has to offer."}),"\n",(0,t.jsx)(s.li,{children:"The dotted light gray lines display how some components can affect others."}),"\n"]}),(0,t.jsx)(s.p,{children:"Each node is organized into four separate rows:"}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Trigger -"})," Different mechanisms/inputs that can be used to manipulate variables"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Variables"})," - Set of named values that hold information"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Controller"})," - The \u201cbrain\u201d that controls the flow of logic based off the values of variables"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Action"})," - The events that occur determined by the controller"]}),"\n"]}),(0,t.jsx)(s.p,{children:"Green nodes are components handled by VRChat, while blue nodes are native to the Unity Editor."})]}),(0,t.jsx)("div",{className:"notion-spacer"}),(0,t.jsx)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 1)) * 0.5)"},children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.img,{alt:"A visual diagram covering VRChat\u2019s Avatars 3.0 animation system",src:n(3812).Z+"",width:"1264",height:"980"}),(0,t.jsx)("br",{}),(0,t.jsx)(a,{children:"A visual diagram covering VRChat\u2019s Avatars 3.0 animation system"})]})}),(0,t.jsx)("div",{className:"notion-spacer"})]}),"\n",(0,t.jsx)(s.h2,{id:"4939e2667ede4f728d4431de864bf926",children:"Glossary"}),"\n",(0,t.jsx)(s.h3,{id:"39b2ffccb7d44aa6a52b28bca040b052",children:"Triggers"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Expressions Menu Controls"})," - The VRChat \u201cWheel\u201d Menu often used for toggles and radial puppets as described in ",(0,t.jsx)(s.a,{href:"/docs/Avatars/Expressions-Menu-Params",children:"Expressions Menu and Parameters"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"OSC"})," - A method of using external applications to communicate with your VRChat avatar from outside the game using ",(0,t.jsx)(s.a,{href:"https://docs.vrchat.com/docs/osc-overview",children:(0,t.jsx)(s.strong,{children:"Open Sound Control"})})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Parameter Driver"})," - A kind of ",(0,t.jsx)(s.a,{href:"/docs/Avatars/State-Behaviours",children:"VRC State Behaviours"})," that can directly manipulate the value of an Animator Parameter"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"aaf30605d88741db9a89bf9c93b6e93a",children:"Variables"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Expression Parameters"})," - User defined variables to be used in the Expressions Menu or synced across the VRChat network as described in ",(0,t.jsx)(s.a,{href:"/docs/Avatars/Expressions-Menu-Params",children:"Expressions Menu and Parameters"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Built-In Parameters"})," - VRChat defined variables that are automatically handled by the network/client as described in ",(0,t.jsx)(s.a,{href:"/docs/Avatars/VRC-Parameters",children:"Built-In VRC Parameters"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Avatar Dynamics Parameters"})," - User defined variables set to be handled by ",(0,t.jsx)(s.a,{href:"https://www.notion.so/e5f41ec7427b4d2ebdf1703c947c79cc",children:"Phys Bones"})," or ",(0,t.jsx)(s.a,{href:"/docs/Avatars/Contacts",children:"Contact Receivers/Senders"})]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"4c738fe5b2514fbeafdcd055a6f061ef",children:"Controller"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animator Parameters"})," - Low level variables specific to ",(0,t.jsx)(s.a,{href:"/docs/Unity-Animations/Animator-Controllers",children:"Animator Controllers"})," that may be synced or manipulated by any of the above variables or triggers"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animator Layers"})," - Where most of the logic is handled within ",(0,t.jsx)(s.a,{href:"/docs/Unity-Animations/Animator-Controllers",children:"Animator Controllers"})]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"de613552d76b4d1ebbb0079c6e961a9f",children:"Action"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animation Clips"})," - ",(0,t.jsx)(s.a,{href:"/docs/Unity-Animations/Animation-Clips",children:"Animation Clips"})," manipulate properties/values on any GameObject/Component"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"State Behaviours"})," - ",(0,t.jsx)(s.a,{href:"/docs/Avatars/State-Behaviours",children:"VRC State Behaviours"})," perform a variety of tasks that can manipulate Animator Controllers/Avatars"]}),"\n"]}),"\n",(0,t.jsxs)("div",{class:"notion-row",children:[(0,t.jsxs)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 1)) * 0.5)"},children:[(0,t.jsx)(s.h2,{id:"example-logic---toggles",children:"Example Logic - Toggles"}),(0,t.jsx)(s.p,{children:"An example using this diagram to highlight the black lines for a fundamental understanding is as follows:"}),(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Expressions Menu Controls"})," - A user in VRChat opens the wheel menu and presses a control for a \u201cHat Toggle\u201d"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Expression Parameters"})," - The \u201cHat Toggle\u201d control flips an expression parameter bool named \u201cHat\u201d between ",(0,t.jsx)(s.code,{children:"true"})," and ",(0,t.jsx)(s.code,{children:"false"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animator Parameters"})," - VRChat synchronizes all parameters named \u201cHat\u201d from the Expression Parameters to all Animator Parameters"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animator Layers"})," - The controller switches between two states \u201cHat On\u201d and \u201cHat Off\u201d depending if the \u201cHat\u201d parameter is ",(0,t.jsx)(s.code,{children:"true"})," or ",(0,t.jsx)(s.code,{children:"false"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animation Clips"})," - The animation clip inside the \u201cHat On\u201d or \u201cHat Off\u201d state then enables/disables the hat"]}),"\n"]})]}),(0,t.jsx)("div",{className:"notion-spacer"}),(0,t.jsxs)("div",{class:"notion-column",style:{width:"calc((100% - (min(32px, 4vw) * 1)) * 0.5)"},children:[(0,t.jsx)(s.h2,{id:"example-logic---gestures",children:"Example Logic - Gestures"}),(0,t.jsx)(s.p,{children:"An example using this diagram slightly modified to incorporate Built-In Parameters is as follows:"}),(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Built-In Parameters"})," - A user in VRChat moves their left fingers to conduct a hand gesture that VRChat recognizes as the parameter \u201cGestureLeft\u201d"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animator Parameters"})," - VRChat synchronizes all parameters named \u201cGestureLeft\u201d from the VRChat client to all Animator Parameters"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animator Layers"})," - The controller switches between eight states depending on the \u201cGestureLeft\u201d parameter"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Animation Clips"})," - The animation clip inside that gesture\u2019s state then moves the fingers or changes the facial expression"]}),"\n"]})]}),(0,t.jsx)("div",{className:"notion-spacer"})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(i,{children:"Last Updated: 31 March 2024 08:54:00"})]})}function h(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function m(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},3812:(e,s,n)=>{n.d(s,{Z:()=>t});const t=n.p+"assets/images/1441358587-649ba9afe091760ab17e5f0bc6d703d9.png"},1151:(e,s,n)=>{n.d(s,{Z:()=>l,a:()=>i});var t=n(7294);const r={},a=t.createContext(r);function i(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);